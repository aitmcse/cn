 #include <iostream>
 #include <vector>
 using namespace std;
 void print_route(int n, vector<vector<int>>& via,
 vector<vector<int>>& dist);
 int main() {
 int n, i, j, k, count;
 // Input the number of nodes
 cout << "Enter the number of nodes: ";
 cin >> n;
 // Define the distance matrix, dist matrix, and via matrix
 vector<vector<int>> dmat(n, vector<int>(n)), dist(n,
 vector<int>(n)), via(n, vector<int>(n));
 // Input the cost matrix
 cout << "Enter the cost matrix:" << endl;
 for(i = 0; i < n; i++) {
for(j = 0; j < n; j++) {
 cin >> dmat[i][j];
 if(i == j) {
 dmat[i][j] = 0; // Distance to itself is 0
 }
 dist[i][j] = dmat[i][j]; // Initially, the distance is
 same as the cost matrix
 via[i][j] = j; // Initially, the via matrix just
 points to the destination itself
 }
 }
 // Apply the Distance Vector Algorithm
 do {
 count = 0;
 for(i = 0; i < n; i++) {
 for(j = 0; j < n; j++) {
 for(k = 0; k < n; k++) {
 if(dist[i][j] > dmat[i][k] + dist[k][j]) {
 dist[i][j] = dmat[i][k] + dist[k][j];
 via[i][j] = k;
 count++;
 }
 }
 }
 }
 } while(count != 0); // Continue until there is no update
 // Print the results for each router
 print_route(n, via, dist);
 return 0;
 }
 // Function to print the routing table for each router
 void print_route(int n, vector<vector<int>>& via,
 vector<vector<int>>& dist) {
 for(int i = 0; i < n; i++) {
 cout << "State value for router " << i << ":" << endl;
 for(int j = 0; j < n; j++) {
 cout << "To " << j << " - Via " << via[i][j] << ",
 Distance is " << dist[i][j] << endl;
 }
}
 }


Input
Enter the Number of nodes: 4
Enter the cost matrix:
0 3 23 999
999 0 2 999
999 999 999 5
999 999 999 999
